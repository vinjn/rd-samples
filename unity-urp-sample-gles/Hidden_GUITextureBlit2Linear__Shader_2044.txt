#version 320 es

precision highp float;
precision highp int;
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
vec3 u_xlat2;
bvec3 u_xlatb2;
vec3 u_xlat3;
bvec3 u_xlatb3;
void main()
{
    u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat1.xyz = u_xlat0.xyz + vec3(0.0549999997, 0.0549999997, 0.0549999997);
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.947867334, 0.947867334, 0.947867334);
    u_xlat1.xyz = log2(u_xlat1.xyz);
    u_xlat1.xyz = u_xlat1.xyz * vec3(2.4000001, 2.4000001, 2.4000001);
    u_xlat1.xyz = exp2(u_xlat1.xyz);
    u_xlat2.xyz = log2(u_xlat0.xyz);
    u_xlat2.xyz = u_xlat2.xyz * vec3(2.20000005, 2.20000005, 2.20000005);
    u_xlat2.xyz = exp2(u_xlat2.xyz);
    u_xlatb3.xyz = lessThan(u_xlat0.xyzx, vec4(1.0, 1.0, 1.0, 0.0)).xyz;
    {
        vec3 hlslcc_movcTemp = u_xlat1;
        hlslcc_movcTemp.x = (u_xlatb3.x) ? u_xlat1.x : u_xlat2.x;
        hlslcc_movcTemp.y = (u_xlatb3.y) ? u_xlat1.y : u_xlat2.y;
        hlslcc_movcTemp.z = (u_xlatb3.z) ? u_xlat1.z : u_xlat2.z;
        u_xlat1 = hlslcc_movcTemp;
    }
    u_xlatb2.xyz = greaterThanEqual(vec4(0.0404499993, 0.0404499993, 0.0404499993, 0.0), u_xlat0.xyzx).xyz;
    u_xlat3.xyz = u_xlat0.xyz * vec3(0.0773993805, 0.0773993805, 0.0773993805);
    u_xlat0.x = (u_xlatb2.x) ? u_xlat3.x : u_xlat1.x;
    u_xlat0.y = (u_xlatb2.y) ? u_xlat3.y : u_xlat1.y;
    u_xlat0.z = (u_xlatb2.z) ? u_xlat3.z : u_xlat1.z;
    SV_Target0 = u_xlat0;
    return;
}